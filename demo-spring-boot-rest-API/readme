https://spring.io/guides/gs/accessing-data-mysql/

Create the Database
$ sudo mysql --password
mysql> create database db_example; -- Creates the new database
mysql> create user 'springuser'@'%' identified by 'ThePassword'; -- Creates the user
mysql> grant all on db_example.* to 'springuser'@'%'; -- Gives all privileges to the new user on the newly created database

Create the application.properties File
#src/main/resources/application.properties
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/db_example
spring.datasource.username=springuser
spring.datasource.password=ThePassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true

If you use Maven, you can run the application by using ./mvnw spring-boot:run.
Alternatively, you can build the JAR file with ./mvnw clean package and then run the JAR file, as follows:

java -jar target/gs-accessing-data-mysql-0.1.0.jar

Test the Application
$ curl localhost:8080/demo/add -d name=First -d email=someemail@someemailprovider.com

$ curl 'localhost:8080/demo/all'

Make Some Security Changes
mysql> revoke all on db_example.* from 'springuser'@'%';
mysql> grant select, insert, delete, update on db_example.* to 'springuser'@'%';

When you want to make changes to the database:

Regrant permissions.

Change the spring.jpa.hibernate.ddl-auto to update.

Re-run your applications.